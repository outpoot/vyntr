name: Rust Components

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'genesis/**'
      - 'pulse/**'
  pull_request:
    paths:
      - 'genesis/**'
      - 'pulse/**'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [genesis, pulse]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ${{ matrix.component }}
      
      - name: Check formatting
        run: cd ${{ matrix.component }} && cargo fmt --check
      
      - name: Run clippy
        run: cd ${{ matrix.component }} && cargo clippy -- -D warnings
      
      - name: Build
        run: cd ${{ matrix.component }} && cargo build --verbose
      
      - name: Run tests
        run: cd ${{ matrix.component }} && cargo test --verbose
  
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/genesis
      
      - name: Build and push Genesis Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./genesis
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}